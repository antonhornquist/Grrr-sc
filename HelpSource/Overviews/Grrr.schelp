title:: Grrr
summary:: An overview of the Grrr library
categories:: External Control

section::Introduction

Grrr-sc provides high level UI abstractions for grid based controllers such as link::http://monome.org##monome:: 40h, 64, 128 and 256 devices. Widgets, ie. buttons and toggles, are placed on controllers. Widgets can be nested in containers which allows for modes and paging. Grrr reuses principles of the standard SuperCollider GUI class library.

subsection::Hello World
code::
a=GRScreenGrid.new; // creates a virtual grid which shows up in a separate window
b=GRButton(a, 0@0); // places a 1x1 button at top left key
b.action = { |view, value| (value.if("Hello", "Goodbye") + "World").postln }; // sets an action to be triggered when the button is pressed

// pressing the top left grid button of the virtual grid will change led state and output to the Post Window
::

subsection::An example with sound
code::
s.boot;
a=GRMonome.new; // creates a monome
b=GRButton(a, 0@0); // places a 1x1 button at top left key
b.action = { |view, value| if (value) { c = {SinOsc.ar}.play } { c.release } }; // sets an action to be triggered when the button is pressed
a.spawnGui; // spawns a virtual grid

// pressing the top left grid button of the monome or virtual grid will change led state and audition a sine oscillator
::

subsection::A simple step sequencer
code::
s.boot;
a=GRMonome.new; // creates a monome
b=GRStepView.new(a, 0@7, a.numCols, 1); // the step view defines when to play notes 
c=GRMultiToggleView.new(a, 0@0, a.numCols, 7); // toggles representing note pitch
c.valuesAreInverted=true;

(
    // sequence that plays a note for steps that are lit
    fork {
        b.playhead = 0;
        inf.do {
            if (b.stepValue(b.playhead)) { (degree: c.toggleValue(b.playhead)).play };
            0.15.wait;
            b.playhead = (b.playhead + 1) % b.numCols;
        }
    }
)

a.spawnGui; // spawns a virtual grid

(
// randomize pattern
b.numCols.do { |index|
	c.setToggleValue(index, (c.numRows).rand);
	b.setStepValue(index, [true, false].choose);
};
)
::

section::Classes

link::Classes/GRView:: - Abstract superclass. Represents a 2D grid of backlit buttons.
	tree::
	## link::Classes/GRButton:: - An on/off button.
	## link::Classes/GRAbstractToggle::
		tree::
		## link::Classes/GRToggle:: - A multiple value toggle
			tree::
			## link::Classes/GRVToggle:: - Vertically oriented toggle
			## link::Classes/GRHToggle:: - Horizontally oriented toggle
			::
		::
	## link::Classes/GRKeyboard:: - Keyboard representation
	## link::Classes/GRContainerView:: - Abstract class for views that may contain other views.
		tree::
		## link::Classes/GRTopView:: - This is the topmost view in a view tree and typically the view to which controllers attach. The view cannot be added as a child to any other view.
		## link::Classes/GRMultiButtonView:: - A grid of buttons of the same size.
			tree::
			## link::Classes/GRStepView:: - A grid of buttons of the same size referred to by index. One of the steps may be indicated as the playhead position. Suitable for step sequencing.
			::
		## link::Classes/GRMultiToggleView:: - An array of vertical or horizontal toggles of the same size.
		::
	::
link::Classes/GRController:: - Abstract superclass. Represents a device that may attach to and control part of or an entire GRView.
	tree::
	## link::Classes/GRMonome:: - Monome controller (defaults to the bounds of an horizontally oriented monome 128).
		tree::
		## link::Classes/GRMonome64:: - 8x8 monome.
		## link::Classes/GRVMonome128:: - 8x16 monome.
		## link::Classes/GRHMonome128:: - 16x8 monome.
		## link::Classes/GRMonome256:: - 16x16 monome.
		::
	## link::Classes/GRScreenGrid:: - An on-screen controller of user definable size. Button events may be triggered with mouse and keyboard.
	::

section::In depth

definitionList::
## Basic Concepts || link::Reference/Grrr/Basic-Concepts::
## Extending Grrr || link::Reference/Grrr/Extending-Grrr::
## Internal Snooping || link::Tutorials/Grrr/Internal-Snooping::
## Delimitations, Known Issues || link::Reference/Grrr/Delimitations::
::

section::Feedback

for suggestions / comments contact me

Anton HÃ¶rnquist, anton.hornquist@gmail.com
