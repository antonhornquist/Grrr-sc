TITLE:: GRContainerView
summary:: Abstract class for views that may contain other views.
categories:: External Control
related:: Classes/GRView, Overviews/Grrr

DESCRIPTION::
Abstract class for views that may contain other views.


CLASSMETHODS::

METHOD:: new

Creates a new instance of GRContainerView and - if parent and origin is supplied - makes it a child of another GRContainerView or GRController, effectively placing it within the parent's visual space.

NOTE::
If parent and origin arguments are omitted the view will be created as detached and not connected to a parent. It may be attached to a parent at a later stage.
::

ARGUMENT:: parent
The instance of link::Classes/GRContainerView:: or link::Classes/GRController:: that the new GRContainerView will become a child of.

ARGUMENT:: origin
A Point describing the position of the GRContainerView. Position is measured relative to the parent's top-left corner.

ARGUMENT:: numCols
An Integer describing the width of the 2D grid of the new GRContainerView.

ARGUMENT:: numRows
An Integer describing the height of the 2D grid of the new GRContainerView.

ARGUMENT:: enabled
A Boolean that determine whether the new GRContainerView is enabled upon creation.

ARGUMENT:: pressThrough
A Boolean that determine whether the new GRContainerView will maintain button state events for areas covered by its child views.

returns:: An instance of GRContainerView

METHOD:: newDetached
Convenience method used when creating a detached view not connected to a parent. Refer to link::#*new:: for description of arguments.

returns:: An instance of GRContainerView

METHOD:: newDisabled
Convenience method used for creating a disabled view. Refer to link::#*new:: for description of arguments.

returns:: An instance of GRContainerView


INSTANCEMETHODS::

SUBSECTION:: Behavior

METHOD:: pressThrough
Answers whether view maintains button state events for areas covered by its child views.

returns:: A Boolean


SUBSECTION:: Parent - child

METHOD:: addChild
Adds a view as a child to this view

ARGUMENT:: view
The view to add as a child.

ARGUMENT:: origin
A Point describing the position of where to add the view. Position is measured relative to the parent (this view's) top-left corner.

METHOD:: removeChild
Removes a view as a child to this view.

ARGUMENT:: view
The child view.

METHOD:: removeAllChildren
Removes all child views to this view.

METHOD:: isParentOf
Answers whether this view is parent of another view.

ARGUMENT:: view
The view to test.

returns:: A Boolean

METHOD:: hasChildAt
Answers whether this view has a child that occupies a certain point.

ARGUMENT:: point
A Point describing a location on a 2D grid

returns:: A Boolean

METHOD:: getChildrenAt
Returns all children that occupies a certain point.

ARGUMENT:: point
A Point describing a location on a 2D grid

returns:: An Array of GRViews

METHOD:: enabledChildren
Returns all enabled children.

returns:: An Array of GRViews

METHOD:: isEmpty
Answers true if view has no child views

returns:: A Boolean


SUBSECTION:: Overrides

METHOD:: handleViewButtonEvent
Programmatically press or release a button on the view. Used internally by the Grrr framework to dispatch button events to views.

If child views of a GRContainerView cover the point pressed or released, the button event will be routed to the topmost child view.

If pressThrough property is set to true the button event will also be registered on the GRContainerView. This is typically used for subclasses of GRContainerView that hides its internals and from the outside acts as a GRView.

ARGUMENT:: source
The object emitting the event, typically a GRController or GRContainerView

ARGUMENT:: point
A Point describing a location on a 2D grid.

ARGUMENT:: pressed
A Boolean describing whether the event is a button press. If false, it is a button release.

returns:: An Array of Events with information on all views handling the event and the location on each of the views the event pertained to.

METHOD:: releaseAll
Releases all pressed buttons on the view.


SUBSECTION:: Led state

METHOD:: isLitAt
Answers whether the led of the button at point is lit on the view. If the GRContainerView contains child views at specified point the topmost child's led state will be returned.

ARGUMENT:: point
A Point describing a location on a 2D grid

returns:: A Boolean

SUBSECTION:: Refresh

METHOD:: refreshPoint
Refreshes led state for a button on the view.

ARGUMENT:: point
A Point describing a location on a 2D grid

ARGUMENT:: refreshChildren
A Boolean that determine whether to propagate refresh to child views. Default is true.


SUBSECTION:: String representation

METHOD:: asTree
Returns a String representing human readable information of the view and, optionally, all its children.

ARGUMENT:: includeDetails
A Boolean. True will include a plot whereas false will not. The default is false.

ARGUMENT:: indentLevel
An Integer describing what indentation level to use.

returns:: A String

METHOD:: asPlot
Return a String representation of plot information on button and led state of the view.

ARGUMENT:: indentLevel
An Integer describing what indentation level to use

returns:: A String


EXAMPLES::

code::
a=GRContainerView.newDetached(8, 8);
b=GRView.newDetached(2, 2);
a.addChild(b, 0@0);
a.isParentOf(b); // true
a.getChildrenAt(0@0) == [b]; // true
a.getEnabledChildAt(0@0) == b; // true
::
