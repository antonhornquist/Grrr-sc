TITLE:: GRKeyboard
summary:: A widget that represents a keyboard
categories:: External Control

DESCRIPTION::
A view that lays out keys as a keyboard. A GRKeyboard's value is a dictionary describing which midinotes of the keyboard are pressed and which are not.

CLASSMETHODS::

METHOD:: new
Creates a new instance of GRKeyboard and makes it a child of a link::Classes/GRContainerView:: or link::Classes/GRController::, effectively placing it within the parent's visual space.

ARGUMENT:: parent
The instance of link::Classes/GRContainerView:: or link::Classes/GRController:: that the new GRKeyboard will become a child of.

ARGUMENT:: origin
A Point describing the position of the new GRKeyboard. Position is measured relative to the parent's top-left corner.

ARGUMENT:: numCols
An Integer describing the width of the new GRKeyboard.

ARGUMENT:: numRows
An Integer describing the height of the new GRKeyboard.

ARGUMENT:: enabled
A Boolean that determine whether the new GRKeyboard is enabled upon creation.

ARGUMENT:: basenote
The lowest note on the visible keyboard.

ARGUMENT:: coupled
A Boolean that determine whether the new GRKeyboard's value automatically toggles on button press/release. The default is true.

ARGUMENT:: behavior
A Boolean that determine whether notes on the keyboard are toggled on each button press or momentarily played only as buttons are held down. Symbol \toggle refers to the former, and \momentary the latter. The default is \momentary.

returns:: An instance of GRKeyboard

METHOD:: newDecoupled
Convenience method used when creating a decoupled button. Refer to link::#*new:: for description of arguments.

returns:: An instance of GRKeyboard

METHOD:: newDetached
Convenience method used when creating a view not connected to a parent.

returns:: An instance of GRKeyboard

METHOD:: newDisabled
Convenience method used when creating a disabled view.

returns:: An instance of GRKeyboard


INSTANCEMETHODS::

SUBSECTION:: Behavior

METHOD:: isCoupled
Answers whether the GRKeyboard is coupled or not.

returns:: A Boolean

METHOD:: coupled
A Boolean that determine whether the GRKeyboard's value automatically toggles on button press/release. The default is true.

ARGUMENT:: argCoupled
A Boolean

returns:: A Boolean

METHOD:: behavior
A Boolean that determine whether notes on the keyboard are toggled on each button press or momentarily played only as buttons are held down. Symbol \toggle refers to the former, and \momentary the latter. The default is \momentary.

returns:: A Symbol

METHOD:: basenote
The lowest note on the visible keyboard.

ARGUMENT:: argBasenote
An Integer describing midinote of the lowest note on the keyboard.

returns:: An Integer


SUBSECTION:: Visual appearance

METHOD:: indicateKeys
Sets or gets flag that determine what keys are lit. Either \black, \white or \blackAndWhite. Default is \blackAndWhite.

ARGUMENT:: argIndicateKeys
A Symbol

returns:: A Symbol


SUBSECTION:: Note state

METHOD:: keyrange
Range of visible notes

returns:: An Interval

METHOD:: noteIsPressed
Answers whether a specific note currently is pressed.

ARGUMENT:: note
An Integer describing midinote

returns:: A Boolean

METHOD:: noteIsReleased
Answers whether a specific note currently is released.

ARGUMENT:: note
An Integer describing midinote

returns:: A Boolean

METHOD:: noteIsPressedOnView
Answers whether a specific note currently is pressed in visible keyboard area.

ARGUMENT:: note
An Integer describing midinote

returns:: A Boolean

METHOD:: noteIsReleasedOnView
Answers whether a specific note currently is released in visible keyboard area.

ARGUMENT:: note
An Integer describing midinote

returns:: A Boolean


METHOD:: toggleNote
Toggles pressed state of a note

ARGUMENT:: note
An Integer describing midinote

METHOD:: setNotePressed
Sets a note as pressed

ARGUMENT:: note
An Integer describing midinote

METHOD:: setNoteReleased
Sets a note as released

ARGUMENT:: note
An Integer describing midinote

METHOD:: setNote
Sets pressed state of a note

ARGUMENT:: note
An Integer describing midinote

ARGUMENT:: pressed
A Boolean

METHOD:: toggleNoteAction
METHOD:: setNotePressedAction
METHOD:: setNoteReleasedAction
METHOD:: setNoteAction

As above but with side effect of triggering actions.


SUBSECTION:: Actions

METHOD:: notePressedAction
Sets or returns the GRKeyboard's action triggered when a note is pressed.

returns:: A Function

METHOD:: noteReleasedAction
Sets or returns the GRKeyboard's action triggered when a note is released.

returns:: A Function

METHOD:: notePressedOnViewAction
Sets or returns the GRKeyboard's action triggered when a note is pressed on the view. Used for decoupled GRKeyboard instances.

returns:: A Function

METHOD:: noteReleasedOnViewAction
Sets or returns the GRKeyboard's action triggered when a note is released on the view. Used for decoupled GRKeyboard instances.

returns:: A Function

METHOD:: notShownNoteStateChangedAction
Action triggered when a note that is not visible on the keyboard is changed.

This can be either a Function - in which the Function is executed - or Symbol \flashEdgeOnPress or Symbol \flashEdgeOnPressAndRelease, the former causing the edge of the keyboard to flash on note presses or both presses and releases.

returns:: A Function or Symbol


SUBSECTION:: Flash support

METHOD:: flashNote
Flashes the led of a specified note in the visible keyboard area.

ARGUMENT:: note
An Integer describing midinote

ARGUMENT:: delay
A delay to use when flashing specified in milliseconds. If omitted defaultFlashDelay is used.

METHOD:: flashNotes
Flashes leds of specified notes in the visible keyboard area.

ARGUMENT:: notes
An Integer describing midinote

ARGUMENT:: delay
A delay to use when flashing specified in milliseconds. If omitted defaultFlashDelay is used.

METHOD:: flashLeftEdge
Flashes the right edge of the visible keyboard area.

ARGUMENT:: delay
A delay to use when flashing specified in milliseconds. If omitted defaultFlashDelay is used.

METHOD:: flashRightEdge
Flashes the right edge of the visible keyboard area.

ARGUMENT:: delay
A delay to use when flashing specified in milliseconds. If omitted defaultFlashDelay is used.


EXAMPLES::

code::
// post note names pressed

// TODO: no need to make newDetached and enableKeyControl

// TODO: cleanup
(
	var table = (), keyboard, screenGrid;
	// build a table of note names (nicked from Literals helpfile)
	value {
		var semitones = [0, 2, 4, 5, 7, 9, 11];
		var naturalNoteNames = ["C", "D", "E", "F", "G", "A", "B"];
	
		(0..9).do {|o|
			naturalNoteNames.do {|c, i|
				var n = (o + 1) * 12 + semitones[i];
				table[n] = (c ++ o).asSymbol;
				if ((c != "B") and: (c != "E")) {
					table[n+1] = (c ++ "#"  ++ o).asSymbol;
				};
			};
		};
	};

	keyboard = GRKeyboard.newDetached(7, 8)
		.notePressedAction_({ |kbd, note| "note % was pressed".format(table[note]).postln })
		.noteReleasedAction_({ |kbd, note| "note % was released".format(table[note]).postln });

	screenGrid = GRScreenGrid.newView(keyboard).enableKeyControl;
)
::
